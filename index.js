// コメントコーディング

// カードの山
// 自分のカード
// 相手のカード
// 勝敗決定フラグ

//　イベントハンドラの割り当て

// ページの読み込みが完了したとき実行する関数を登録
window.addEventListener("load",初期表示);
// カードを引くボタンを押したとき実行する関数を登録
document.querySelector("#ボタンのID").addEventListener
("click",カードを引く);
// 勝負するボタンを押したときに実行する関数を登録
document.querySelector("#ボタンのID").addEventListener
("click",勝負する);
// もう一回遊ぶボタンを押したときに実行する関数を登録
document.querySelector("#ボタンのID").addEventListener
("click",もう一回遊ぶ);

//　イベントハンドラ

// ページの読み込みが完了した時実行する関数
function 初期表示() {
  // シャッフル
  // 自分がカードを引く
  // 相手がカードを引く
  // 画面を更新する
}

// カードの山をシャッフルする関数
function シャッフル() {
  for(){
    // カードの山からランダムに選んだ2枚を入れ替える
  }
}

function 自分がカードを引く() {
  if(自分のカードの枚数が4枚以下){
    // カードの山（配列）から１枚取り出す
    // 取り出した１枚を自分のカード
  }
}

function 相手がカードを引く() {
  if(相手のカードの枚数が4枚以下){
    if(考える){
    // カードの山（配列）から１枚取り出す
    // 取り出した１枚を自分のカード
    }
  }
}

//　画面を更新する関数
function 画面を更新する() {
  // 自分のカードを表示する
  // 相手のカードを表示する
  // カードの合計を再計算する
}

// カードを引くかどうか考える関数
function 考える(){
// 引くか引かないかを戻り値で返す
}

// カードを引くボタンを押したときに実行する関数
function カードを引く() {
  // 自分がカードを引く
  // 相手がカードを引く
  // 画面を更新する
}

// 勝負する！ボタンを押したとき実行する関数
function 勝負する() {
  //　勝敗を判定する
  // 勝敗を画面に表示する
}

// もう一回遊ぶボタンを押したとき実行する関数
function もう一回遊ぶ(){
  // 画面を初期表示に戻す
}